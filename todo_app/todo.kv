#:import dp kivy.metrics.dp

<TaskPopup>:
    title: "Add Task"
    size_hint: .8, None
    height: dp(200)
    auto_dismiss: False
    BoxLayout:
        orientation: 'vertical'
        padding: dp(12)
        spacing: dp(8)
        TextInput:
            id: task_input
            multiline: False
            size_hint_y: None
            height: dp(40)
            focus: True
        BoxLayout:
            size_hint_y: None
            height: dp(40)
            spacing: dp(8)
            Button:
                text: "Add"
                on_release: root.add_task()
            Button:
                text: "Cancel"
                on_release: root.dismiss()

<TodoWidget>:
    orientation: "vertical"
    padding: dp(16)
    spacing: dp(8)
    on_tasks: root.update_tasks_list()

    BoxLayout:
        size_hint_y: None
        height: dp(50)
        spacing: dp(8)
        Button:
            text: "Add Task"
            on_release: root.add_task()
        Button:
            text: "Clear Completed"
            on_release: root.clear_completed()

    ScrollView:
        GridLayout:
            id: tasks_list
            cols: 1
            size_hint_y: None
            height: self.minimum_height
            spacing: dp(4)
            padding: dp(4)
            Widget:
                size_hint_y: None
                height: 0

<TaskItem@BoxLayout>:
    task_text: ""
    done: False
    idx: 0
    toggle_callback: None
    remove_callback: None
    size_hint_y: None
    height: dp(50)
    spacing: dp(8)

    canvas.before:
        Color:
            rgba: (0.9, 0.9, 0.9, 1) if self.done else (1, 1, 1, 1)
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [dp(8)]

    CheckBox:
        active: root.done
        on_active: root.toggle_callback(root.idx)
        size_hint_x: None
        width: dp(40)

    Label:
        text: root.task_text
        color: (0.4, 0.4, 0.4, 1) if root.done else (0, 0, 0, 1)
        text_size: self.size
        valign: 'middle'
        shorten: True
        shorten_from: 'right'
        markup: True
        font_size: dp(16)

        canvas.after:
            Color:
                rgba: (0.4, 0.4, 0.4, 1) if root.done else (0, 0, 0, 0)
            Line:
                points: (self.x, self.center_y, self.right, self.center_y) if root.done else ()
                width: 1.2 if root.done else 0

    Button:
        text: "Delete"
        on_release: root.remove_callback(root.idx)
        size_hint_x: None
        width: dp(70)
